#!/usr/bin/env sh

# This script simply watches for an updated kernel. If an update is found, it
# will then kick off a packer build of the related operating system.
#
# Requires: GNU Sed, Ruby gem t
#
# Tested on: Mac OS X ElCapitan
#
# Author: Justin Cook 

set -x
set -o errexit
set -o nounset

# cron does not parse profile and runtime files, so look in personal dir
source ~/.bashrc

# User editable variables
MROR="http://mirror.bytemark.co.uk/fedora/linux/updates/24/x86_64/k/"
PLAT="fedora24"
GSED="/usr/local/bin/gsed"
TBIN="/usr/local/bin/t"
PBIN="/usr/local/bin/packer"
TFIL="/tmp/`basename $0`.$$"
CACH=~/Library/Caches/`basename $0`
PFIL="/tmp/`basename $0`-${PLAT}.lock"

# The cleanup function ran at the begining and end of exectution
function cleanup {
  rm -f $TFIL || /usr/bin/true
}

trap cleanup INT TERM EXIT

# Builds will be false by default unless it specifically meets requirements
declare BILD=false

# Only build if the last known exists and does not match the current latest.
function check_cache {
  if [ -s ${CACH}/${PLAT} ]
  then
    if [ "`cat ${CACH}/${PLAT}`" != "$1" ]
    then
      BILD=true
    fi
  fi
}

function update_cache {
  if [ ! -d $CACH ]
  then
    mkdir $CACH
  fi
  printf $1 > ${CACH}/${PLAT}
}

# Check to see if already running since this is a long process
if [ -f "$PFIL" ]
then
  pgrep -F $PFIL sh >/dev/null && exit 1 || printf $$ > $PFIL
else
  printf $$ > $PFIL
fi

cleanup

curl $MROR -o $TFIL
KRNS=(`cat $TFIL | $GSED -nr 's|.*(kernel-[-.0-9]+\.fc24\.x86_64\.rpm).*|\1|pg' \
      | sort -rnt. -k2,3`)

check_cache ${KRNS[0]}

if [ "$BILD" = true ]
then
  cd ~/repo/packer/${PLAT}
  VERS="`date +%Y.%m.%d.%H%M`"
  $PBIN build -var "_version_=$VERS" template.json
  if [ $? -eq 0 ]
  then
    update_cache ${KRNS[0]}
    MESS="I have released an update to @fedora 24 workstation beta @vagrantup box"
    MESS="$MESS with @virtualbox provider"
    MURL="https://atlas.hashicorp.com/jhcook/boxes/fedora24/versions/$VERS"
    $TBIN update "$MESS $MURL"
  fi
  mv ~/repo/packer/${PLAT}/${PLAT}-virtualbox.box \
     ~/Dropbox/VirtualMachines/${PLAT}/
  rm -fr ~/repo/packer/${PLAT}/output-virtualbox-iso || /usr/bin/true
fi
